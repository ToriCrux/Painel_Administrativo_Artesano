------------ Usuário e Role ------------

CREATE TABLE tb_usuario (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome             VARCHAR(120) NOT NULL,
  email            VARCHAR(160) NOT NULL UNIQUE,
  password_hash    VARCHAR(255) NOT NULL,
  ativo            BOOLEAN NOT NULL DEFAULT TRUE,
  criado_em        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  atualizado_em    TIMESTAMP
);

CREATE TABLE tb_role (
  id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome VARCHAR(40) NOT NULL UNIQUE
);

CREATE TABLE tb_usuario_role (
  usuario_id BIGINT NOT NULL REFERENCES tb_usuario(id) ON DELETE CASCADE,
  role_id    BIGINT NOT NULL REFERENCES tb_role(id) ON DELETE CASCADE,
  PRIMARY KEY (usuario_id, role_id)
);

CREATE TABLE tb_produto (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sku              VARCHAR(50)  NOT NULL UNIQUE,
  nome             VARCHAR(120) NOT NULL,
  categoria        VARCHAR(80),
  medidas          VARCHAR(80),
  cores            VARCHAR(120),
  preco_unitario   NUMERIC(12,2) NOT NULL,
  ativo            BOOLEAN NOT NULL DEFAULT TRUE,
  criado_em        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  atualizado_em    TIMESTAMP,
  version          INT NOT NULL DEFAULT 0
);

CREATE TABLE tb_estoque (
  produto_id        BIGINT PRIMARY KEY REFERENCES tb_produto(id) ON DELETE CASCADE,
  quantidade_atual  INT NOT NULL DEFAULT 0,
  minimo            INT,
  atualizado_em     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  version           INT NOT NULL DEFAULT 0
);

CREATE TABLE tb_movimentacao_estoque (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  produto_id       BIGINT NOT NULL REFERENCES tb_produto(id),
  tipo             VARCHAR(10)  NOT NULL,   -- 'ENTRADA' | 'SAIDA'
  origem           VARCHAR(15)  NOT NULL,   -- 'PRODUCAO' | 'PEDIDO'
  quantidade       INT NOT NULL CHECK (quantidade > 0),
  saldo_anterior   INT,
  saldo_posterior  INT,
  id_usuario       BIGINT,
  ocorrido_em      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE tb_cliente (
  id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome          VARCHAR(160) NOT NULL,
  cpf_cnpj      VARCHAR(20)  NOT NULL UNIQUE,
  email         VARCHAR(160) NOT NULL UNIQUE,
  telefone      VARCHAR(30),
  cep           VARCHAR(15),
  endereco      VARCHAR(160),
  numero        VARCHAR(20),
  complemento   VARCHAR(80),
  bairro        VARCHAR(80),
  cidade        VARCHAR(80),
  uf            VARCHAR(2),
  referencia    VARCHAR(160),
  criado_em     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE tb_proposta (
  id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_cliente     BIGINT REFERENCES tb_cliente(id),
  id_usuario     BIGINT,
  status         VARCHAR(12) NOT NULL,  -- 'APROVADA'|'NEGADA'
  total          NUMERIC(12,2) NOT NULL DEFAULT 0,
  data_proposta  DATE NOT NULL DEFAULT CURRENT_DATE,
  data_validade  DATE,
  criado_em      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  atualizado_em  TIMESTAMP,
  version        INT NOT NULL DEFAULT 0
);

CREATE TABLE tb_proposta_item (
  id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_proposta     BIGINT NOT NULL REFERENCES tb_proposta(id) ON DELETE CASCADE,
  id_produto      BIGINT NOT NULL REFERENCES tb_produto(id),
  quantidade      INT NOT NULL CHECK (quantidade > 0),
  preco_unitario  NUMERIC(12,2) NOT NULL,
  subtotal        NUMERIC(12,2) NOT NULL
);

CREATE TABLE tb_pedido (
  id                    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_proposta           BIGINT REFERENCES tb_proposta(id),
  id_cliente            BIGINT NOT NULL REFERENCES tb_cliente(id),
  id_usuario            BIGINT,
  status                VARCHAR(12) NOT NULL,  -- 'INICIADO'|'EM ENTREGA'|'CONCLUIDO'
  total                 NUMERIC(12,2) NOT NULL DEFAULT 0,
  data_pedido           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  data_entrega_prevista DATE,
  data_entrega          DATE,
  criado_em             TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  atualizado_em         TIMESTAMP,
  version               INT NOT NULL DEFAULT 0
);

CREATE TABLE tb_pedido_item (
  id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_pedido       BIGINT NOT NULL REFERENCES tb_pedido(id) ON DELETE CASCADE,
  id_produto      BIGINT NOT NULL REFERENCES tb_produto(id),
  quantidade      INT NOT NULL CHECK (quantidade > 0),
  preco_unitario  NUMERIC(12,2) NOT NULL,
  subtotal        NUMERIC(12,2) NOT NULL
);



------------ Índices úteis ------------

CREATE INDEX idx_usuario_email           ON tb_usuario(email);
CREATE INDEX idx_produto_sku             ON tb_produto(sku);
CREATE INDEX idx_movestoque_prod_data    ON tb_movimentacao_estoque(produto_id, ocorrido_em);
CREATE INDEX idx_cliente_nome    ON tb_cliente(nome);
CREATE INDEX idx_cliente_cidade  ON tb_cliente(cidade);
CREATE INDEX idx_proposta_status_data  ON tb_proposta(status, data_proposta);
CREATE INDEX idx_prop_item_proposta    ON tb_proposta_item(id_proposta);
CREATE INDEX idx_prop_item_produto     ON tb_proposta_item(id_produto);
CREATE INDEX idx_pedido_status_data  ON tb_pedido(status, data_pedido);
CREATE INDEX idx_ped_item_pedido     ON tb_pedido_item(id_pedido);
CREATE INDEX idx_ped_item_produto    ON tb_pedido_item(id_produto);
